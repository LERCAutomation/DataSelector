'* DataExtractor is a MapInfo tool to extract biodiversity information
'* from SQL Server and MapInfo GIS layer for pre-defined spatial areas.
'*
'* Copyright © 2012 - 2019 GiGL, TVERC, SBIC
'* 
'* This file is part of the MapInfo tool 'DataExtractor'.
'* 
'* DataExtractor is free software: you can redistribute it and/or modify
'* it under the terms of the GNU General Public License as published by
'* the Free Software Foundation, either version 3 of the License, or
'* (at your option) any later version.
'* 
'* DataExtractor is distributed in the hope that it will be useful,
'* but WITHOUT ANY WARRANTY; without even the implied warranty of
'* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
'* GNU General Public License for more details.
'* 
'* You should have received a copy of the GNU General Public License
'* along with DataExtractor.  If not, see <http://www.gnu.org/licenses/>.
'*
'***************************************************************
'* Windows32.def v1.01
'*
'* Defines XML and menu global variables and declares subroutines
'* and functions.
'*
'*
'* Created:			Andy Foy - July 2019
'* Last revised:	Andy Foy - July 2019
'***************************************************************

'-------------------------------------------------
' Define the custom variable types
'-------------------------------------------------
Type FILETIME
   dwLowDateTime As Integer
   dwHighDateTime As Integer
End Type

Type WIN32_FIND_DATA Align4
   dwFileAttributes As Integer
   ftCreationTime As FILETIME
   ftLastAccessTime As FILETIME
   ftLastWriteTime As FILETIME
   nFileSizeHigh As Integer
   nFileSizeLow As Integer
   dwReserved0 As Integer
   dwReserved1 As Integer
   cFileName As String * 260
   cAlternate As String * 14
End Type

'-------------------------------------------------
' Declare the subroutines
'-------------------------------------------------

'-------------------------------------------------
' Declare the functions
'-------------------------------------------------
Declare Function FindFirstFile Lib "kernel32"
	Alias "FindFirstFileA"
	(ByVal lpFileName As String,
	lpFindFileData As WIN32_FIND_DATA) As IntPtr
Declare Function FindNextFile Lib "kernel32"
	Alias "FindNextFileA"
	(ByVal hFindFile As IntPtr,
	lpFindFileData As WIN32_FIND_DATA) As Integer
Declare Function FindClose Lib "kernel32"
	(ByVal hFindFile As IntPtr) As Integer

'-------------------------------------------------
' Define the global variables
'-------------------------------------------------
Global hFind As IntPtr
Global wfd As WIN32_FIND_DATA
