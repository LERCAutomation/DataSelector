'* DataSelector is a MapBasic tool and associated SQL scripts to extract
'* biodiversity information from SQL Server based on any selection criteria.
'*
'* Copyright © 2015 - 2016 TVERC, GiGL
'* 
'* This file is part of the MapInfo tool 'DataSelector'.
'* 
'* DataSelector is free software: you can redistribute it and/or modify
'* it under the terms of the GNU General Public License as published by
'* the Free Software Foundation, either version 3 of the License, or
'* (at your option) any later version.
'* 
'* DataSelector is distributed in the hope that it will be useful,
'* but WITHOUT ANY WARRANTY; without even the implied warranty of
'* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
'* GNU General Public License for more details.
'* 
'* You should have received a copy of the GNU General Public License
'* along with DataSelector.  If not, see <http://www.gnu.org/licenses/>.
'*
'***************************************************************
'* XMLFunctions v1.02
'*
'* Contains functions to read/write values from/to XML user
'* configuration files.
'*
'*
'* Created:			Andy Foy - June 2015
'* Last revised:	Andy Foy - January 2016
'*
'* *****************  Version 1.02  *****************
'* Author: Andy Foy		Date: 17/01/2016
'* A. Added function to return node attribute value.
'* 
'* *****************  Version 1.01  *****************
'* Author: Andy Foy		Date: 03/06/2015
'* A. Initial version of code based on Data Extractor tool.
'* 
'***************************************************************
Include "DataSelector.def"

Function GetSingleNodeValue(ByVal hRoot As MIXmlNode, ByVal strPattern As String) As String
'*************************************************
'* Retrieve the value of an XML node
'*************************************************

	Dim hNode As MIXmlNode

	OnError GoTo ErrorHandler

	hNode = MIXmlSelectSingleNode(hRoot, strPattern)
	If hNode Then
		Dim strValue As String
		strValue = Space$(STRING_LEN)
		If MIXmlNodeGetValue(hNode, strValue, STRING_LEN) Then
			GetSingleNodeValue = strValue
		End If
	End If

CleanUp:
	If hNode Then Call MIXmlNodeDestroy(hNode) End If
	Exit Function

ErrorHandler:
	Note str$(Err()) + ": " + Error$()
	Call MyPrint(str$(Err()) + ": " + Error$())

	If 342 = Err() Then
		Exit Function
	Else
		Resume CleanUp
	End If

End Function

Function GetNodeName(ByVal hnode As MIXmlNode) As String
'*************************************************
'* Retrieve the name of an XML node
'*************************************************

	OnError GoTo ErrorHandler

	If hNode Then
		Dim strValue As String
		strValue = Space$(STRING_LEN)
		If MIXmlNodeGetName(hNode, strValue, STRING_LEN) Then
			GetNodeName = strValue
		End If
	End If

CleanUp:
	Exit Function

ErrorHandler:
	Note str$(Err()) + ": " + Error$()
	Call MyPrint(str$(Err()) + ": " + Error$())

	If 342 = Err() Then
		Exit Function
	Else
		Resume CleanUp
	End If

End Function

Function GetNodeAttribute(ByVal hnode As MIXmlNode) As String
'*************************************************
'* Retrieve the attribute of an XML node
'*************************************************

	OnError GoTo ErrorHandler

	If hNode Then
		Dim strValue As String
		strValue = Space$(STRING_LEN)
		If MIXmlNodeGetValue(hNode, strValue, STRING_LEN) Then
			GetNodeAttribute = strValue
		End If
	End If

CleanUp:
	Exit Function

ErrorHandler:
	Note str$(Err()) + ": " + Error$()
	Call MyPrint(str$(Err()) + ": " + Error$())

	If 342 = Err() Then
		Exit Function
	Else
		Resume CleanUp
	End If

End Function

Function GetNodeAttributeValue(ByVal hnode As MIXmlNode, ByVal strAttribute As String) As String
'*************************************************
'* Retrieve a given attribute value of an XML node
'*************************************************

	OnError GoTo ErrorHandler

	If hNode Then
		Dim strValue As String
		strValue = Space$(STRING_LEN)
		If MIXmlNodeGetAttributeValue(hNode, strAttribute, strValue, STRING_LEN) Then
			GetNodeAttributeValue = strValue
		End If
	End If

CleanUp:
	Exit Function

ErrorHandler:
	Note str$(Err()) + ": " + Error$()
	Call MyPrint(str$(Err()) + ": " + Error$())

	If 342 = Err() Then
		Exit Function
	Else
		Resume CleanUp
	End If

End Function
